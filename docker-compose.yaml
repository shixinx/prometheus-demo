version: '3.3'

volumes:
  prometheus_data: { }
  grafana_data: { }
  mysql-data: { }

networks:
  monitoring:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:v2.37.6
    container_name: prometheus
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - monitoring
    links:
      - alertmanager
      - cadvisor
      - node_exporter
    expose:
      - '9090'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring
    expose:
      - '9093'
    ports:
      - 9093:9093

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    expose:
      - '8080'

  node_exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker)($$|/)'
    networks:
      - monitoring
    ports:
      - '9100:9100'

  grafana:
    image: grafana/grafana:9.4.3
    container_name: grafana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    #    environment:
    #      - GF_SECURITY_ADMIN_USER=admin
    #      - GF_SECURITY_ADMIN_PASSWORD=admin
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitoring
    links:
      - prometheus
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  mysql:
    image: mysql:8.0.23
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootroot
    ports:
      - "3333:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    #      - /home/user/mysql-config/my.cnf:/etc/mysql/my.cnf
    networks:
      - monitoring

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld-exporter
    #    restart: always
    restart: unless-stopped
    command:
      #      - --config.my-cnf=/etc/mysql/my.cnf
      - --collect.info_schema.processlist
      - --collect.info_schema.innodb_metrics
      - --collect.info_schema.tablestats
      - --collect.info_schema.tables
      - --collect.info_schema.userstats
      - --collect.engine_innodb_status
      - --mysqld.username=exporter:password
      - --mysqld.address=mysql:3333
    #    environment:
    #      - DATA_SOURCE_NAME=exporter:password@(mysql:3333)/
    #    volumes:
    #      - ./mysql/my.cnf:/etc/mysql/my.cnf:ro
    ports:
      - 9104:9104
    networks:
      - monitoring
    depends_on:
      - mysql

  app:
    image: springboot-prometheus:latest
    container_name: springboot-prometheus
    restart: always
    working_dir: /app
#    volumes:
#      - ./target:/app  # 只挂载 target 目录
#      - ./app:/app
    ports:
      - "8080:8089"
    mem_limit: 256M
    networks:
      - monitoring


